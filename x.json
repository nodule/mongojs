{
  "name": "mongojs",
  "description": "MongoJS for ChiÏ‡",
  "version": "0.0.3",
  "licences": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/mongojs.git"
  },
  "dependencies": {
    "mongojs": "latest"
  },
  "nodes": [
    {
      "name": "close",
      "ns": "mongojs",
      "description": "mongojs close",
      "phrases": {
        "active": "Closing database connection"
      },
      "ports": {
        "input": {
          "db": {
            "type": "function",
            "title": "mongojs db handle"
          }
        },
        "output": {}
      },
      "env": "server",
      "fn": "output = function() {\n  $.db.close()\n}\n"
    },
    {
      "name": "collection",
      "ns": "mongojs",
      "description": "mongojs collection",
      "phrases": {
        "active": "Opening the {{input.collection}} collection"
      },
      "ports": {
        "input": {
          "collection": {
            "type": "string",
            "title": "Collection",
            "description": "The collection name for this database",
            "required": true
          },
          "db": {
            "type": "function",
            "title": "Db Handle",
            "description": "Expects the `db` port of the mongojs.db node",
            "readonly": true,
            "required": true
          }
        },
        "output": {
          "collection": {
            "type": "function",
            "title": "Db Collection handle",
            "readonly": true
          }
        }
      },
      "env": "server",
      "fn": "output = {\n  collection: $.create($.db.collection($.collection))\n}\n"
    },
    {
      "name": "db",
      "ns": "mongojs",
      "description": "mongojs database",
      "phrases": {
        "active": "Creating mongodb connection: {{input.in}}"
      },
      "ports": {
        "input": {
          "connection_string": {
            "type": "string",
            "title": "Connection String",
            "description": "The connection string should follow the format described in [the mongo connection](http://docs.mongodb.org/manual/reference/connection-string/) string docs",
            "require": true
          }
        },
        "output": {
          "db": {
            "type": "function"
          }
        }
      },
      "dependencies": {
        "npm": {
          "mongojs": "latest"
        }
      },
      "env": "server",
      "fn": "output = {\n  db: $.create(mongojs($.connection_string))\n}\n"
    },
    {
      "name": "find",
      "ns": "mongojs",
      "description": "mongojs find",
      "phrases": {
        "active": "Performing find based on the specified criteria"
      },
      "ports": {
        "input": {
          "collection": {
            "type": "function",
            "title": "A mongojs.collection handle",
            "required": true,
            "readonly": true
          },
          "criteria": {
            "type": "object",
            "title": "A mongojs criteria JSON object",
            "required": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "documents": {
            "title": "Documents",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [$.collection, 'find', $.criteria]\n"
    },
    {
      "name": "findAll",
      "ns": "mongojs",
      "description": "MongoJS find all",
      "phrases": {
        "active": "Finding all documents"
      },
      "ports": {
        "input": {
          "collection": {
            "type": "function",
            "title": "A mongojs.collection handle",
            "required": true,
            "readonly": true
          }
        },
        "output": {
          "error": {
            "title": "Error",
            "type": "object"
          },
          "documents": {
            "title": "Documents",
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [$.collection, 'find']\n"
    },
    {
      "name": "insert",
      "ns": "mongojs",
      "description": "mongojs insert",
      "phrases": {
        "active": "Insering document into the collection"
      },
      "ports": {
        "input": {
          "collection": {
            "type": "function",
            "title": "a mongojs.collection handle",
            "required": true,
            "readonly": true
          },
          "document": {
            "type": "object",
            "title": "JSON document",
            "required": true
          }
        },
        "output": {
          "error": {
            "type": "object"
          },
          "docs": {
            "type": "object"
          },
          "n": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [$.collection, 'insert', $.document]\n"
    },
    {
      "name": "remove",
      "ns": "mongojs",
      "description": "mongojs remove",
      "phrases": {
        "active": "Removing document(s) based on the specified criteria"
      },
      "ports": {
        "input": {
          "collection": {
            "type": "function"
          },
          "criteria": {
            "type": "object"
          }
        },
        "output": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "env": "server",
      "fn": "output = [$.collection, 'remove', $.criteria]\n"
    },
    {
      "name": "update",
      "ns": "mongojs",
      "description": "mongojs update",
      "phrases": {
        "active": "Updating document"
      },
      "ports": {
        "input": {
          "collection": {
            "type": "function",
            "title": "a mongojs.collection handle",
            "required": true,
            "readonly": true
          },
          "selector": {
            "type": "object",
            "title": "Selector",
            "required": true
          },
          "document": {
            "type": "object",
            "title": "JSON document",
            "required": true
          }
        },
        "output": {
          "error": {
            "type": "object"
          },
          "docs": {
            "type": "object"
          },
          "n": {
            "type": "object"
          }
        }
      },
      "env": "server",
      "fn": "output = [$.collection, 'update', $.selector, $.document]\n"
    }
  ],
  "env": "server"
}